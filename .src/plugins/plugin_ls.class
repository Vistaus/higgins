' Gambas class file

Public Struct rItemT
  plugin As String            'the plugin name
  Text As String              'text displayed in the clipboard
  SubText As String           'text displayed under the main text
  hApp As DesktopApps         '.desktop files
  action_desktopopen As String   'the data passed to action desktop.open()
  action_openfolder As String 'the data passed to the action openfolder
  action_activate As String   'the data passed to the action activate
  action_clipboard As String  'the text copied to the clipboard
  image_file As String        'optional image displayed (fullpath or "DefferredMimeIcon")
End Struct


Private textcontrol As Object
Private plugin As String
Private iconsize As Integer
Private minchar As Integer = 4   'exit if the search term is lower than that



Public Sub _new(p_plugin As String, p_iconsize As Integer)

  plugin = p_plugin
  iconsize = p_iconsize

End


Private Sub trigged(query As String) As Boolean
  If Len(query) < minchar Then Return False
  'some more controls here (?)
  Return True
End

' Editable part of the template follows:

Public Sub find(textcontrol As Object) As RItemT[]
  'search for files under the current directory
  Dim aFile As String
  Dim rResults As New RItemT[]
  Dim rResult As RItemT
  Dim current_search As String = textcontrol.text
  Dim s_path, path, find_out As String

  If Not trigged(textcontrol.text) Then Return
  
  s_path = current_search
  
  If Not (s_path Begins "/") Then s_path = User.home & "/" & s_path
  If Not Exist(s_path) Then Return
  If Not (Stat(s_path, True).type = gb.Directory) Then Return
  
    For Each path In Dir(s_path).Sort()
      If s_path Ends "/" Then 
        path = s_path & path
          Else
        path = s_path & "/" & path
      Endif
      rResult = create_item(path)
      If rResult <> Null Then rResults.Add(rResult)
      Wait
      If textcontrol.text <> current_search Then Return
    Next

  Return rResults
End


Private Function create_item(path As String) As RItemT
  Dim return_item As RItemT
  Dim hApp As DesktopApps
  Dim isdir As Boolean
    If Exist(path, True) Then
      If Not (path Ends "/") Then 
        isdir = (Stat(path, True).type = gb.Directory)
      Endif
      Wait
    Endif
  
    return_item = New RItemT
    return_item.action_activate = path
    return_item.action_clipboard = path
    return_item.action_desktopopen = path
    return_item.action_openfolder = File.Dir(path)
    return_item.plugin = plugin
    
    'Stop
    If isdir Then 
      return_item.image_file = "icon:/" & iconsize & "/directory" 
      return_item.Text = File.Name(path) & "/"    
        Else
      return_item.image_file = "mimetype://" & path
      return_item.Text = File.Name(path)
    Endif

    return_item.SubText = "In " & File.dir(path) & "/"
    hApp = DesktopApps["Gambas3"]
    return_item.hApp = Null
    Return return_item
End
