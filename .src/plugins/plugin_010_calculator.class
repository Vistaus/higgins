' Gambas class file

Create Static
Static Public Description As String = "Expression evaluator"
Static Public Friendly_name As String = "Calculator"
Static Public configurable As Boolean = False
Static Public Default_enabled As Boolean = True

Public Struct rItemT
  plugin As String            'the plugin name
  Text As String              'text displayed in the clipboard
  SubText As String           'text displayed under the main text
  Image_file As String        'optional image displayed (fullpath or "DefferredMimeIcon")
  Clipboard_data As String    'the data copied to the clipboard
  Action As String            'string that indicates an action
  Action_p As Variant          'the parameter for Action
End Struct

Private plugin As String
Private iconsize As Integer
Private minchar As Integer = 3   'exit if the search term is lower than that




Public Sub _new(p_plugin As String, p_iconsize As Integer)

  plugin = p_plugin
  iconsize = p_iconsize
  
End

Private Sub trigged(query As String) As Boolean
  If Len(query) < minchar Then Return False
  'some more controls here (?)
  Return True
End


Public Sub find(textcontrol As Object) As RItemT[]
  'evualuate expressions
  Dim rResults As New RItemT[]
  Dim rResult As RItemT
  Dim current_search As String = textcontrol.text

  If Not trigged(textcontrol.text) Then Return

  rResult = create_item(current_search)
  If rResult <> Null Then rResults.Add(rResult)

  If textcontrol.text <> current_search Then Return
  Wait 

  Return rResults

End

' Editable part of the template follows:

Private Function create_item(expr As String) As RItemT
  Dim return_item As RItemT
  Dim evalued As String

    If expr Begins "=" Then expr = Right(expr, -1)
    If expr Ends "=" Then expr = Left(expr, -1)
      Try evalued = Eval(expr)
      If Error Then Return

      return_item = New RItemT
      return_item.plugin = plugin
      return_item.Action = "NULL"
      return_item.Action_p = ""
      return_item.Clipboard_data = evalued

      return_item.image_file = "icon:/" & iconsize & "/calculator"

      return_item.Text = evalued
      return_item.SubText = "= " & expr

    Return return_item
End

