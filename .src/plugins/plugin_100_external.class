' Gambas class file

Create Static
Static Public Description As String = "Bridge to external plugin"    'A description for this plugin
Static Public Friendly_name As String = "Bridge Plugin"   'A friendly name for this plugin
Static Public configurable As Boolean = False             'Does this plugin provides a configure() method?
Static Public Default_enabled As Boolean = False          'Does this plugin have to be enabled by default?

Public Sub _free()
    Stop() 
End


Public Struct rItemT
  plugin As String            'The plugin name
  Text As String              'Text displayed in the clipboard
  SubText As String           'Text displayed under the main text
  Image_file As String        'Optional image displayed: possible values:
                              '  "mimetype://fullpath/to/filename/to/identify"
                              '     get picture from mime icon
                              '   "desktopfile://fullpath/to/.desktop/file"
                              '     Get the picture from .desktop file
                              '   "resize://fullpath/to/image/file"
                              '     Load the image from disk and resize it automatically
                              '   "/fullpath/to/image/file"
                              '     Load the image from disk
  
  Clipboard_data As String    'The data copied to the clipboard
  Action As String            'String that indicates what to do when activating a result:
                              '"DESKTOPOPEN"
                              '       Open folders and starts .desktop files from "exec" field
                              '"XDGOPEN"
                              '       Open files using xdg desktop routines
                              '"EXEC"
                              '       Executes executables files
                              '"GUESS"
                              '       Choose an action based on filetype
                              '"NULL"
                              '       Does nothing

  Action_p As Variant         'the parameter for Action
  
End Struct


Private plugin As String
Private iconsize As Integer
Private minchar As Integer = 0 'The plugin will not operate on query text smaller than that


Private ext As Process


Public Sub _new(p_plugin As String, p_iconsize As Integer)

  plugin = p_plugin
  iconsize = p_iconsize

End



Public Sub Stop()
  If ext <> Null Then
    Try ext.Close
    Try ext.kill
  Endif
  items.clear
End


Private Sub trigged(query As String) As Boolean
  'this function will decide if the plugin will be search for "query" or not.
  If Len(query) < minchar Then Return False
  'some more controls here (?)
  Return True
End


Private ext_plugin As String = "/root/tmp/locate.sh"

Public Sub find(textcontrol As Object) As RItemT[]
  'this is the main function, textcontrol is an object that exposes a "text" property.
  'We need to pass an entire object reference instead of a simple string so that
  'we can stop a (slow) plugin as soon as textcontrol.text changes (ie: the user is still typing...)

  Dim anItem As String
  Dim rResults As New RItemT[]
  Dim rResult As RItemT
  Dim current_search As String = textcontrol.text
  Dim out As String

  Stop()
    
  If Not trigged(textcontrol.text) Then Return

  ext = Shell ext_plugin & " " & current_search For Input As "ext"
  
  While ext.state = Process.running 'async wait for process to end.
    Wait 0.01
  Wend
  Return items

End


Private current_item As RItemT
Private items As New RItemT[]

Public Sub ext_read()
  Dim iLine As String
  ' If Not ext.state = Process.running Then Return
  ' If Eof(ext) Then Return
  Line Input #ext, iLine
  
  Select iLine
    
    Case "BEGIN"
      current_item = New RItemT
      current_item.plugin = "external"
    Case Like "Text=*"
      current_item.Text = Right(iLine, - InStr(iLine, "="))
      
    Case Like "SubText=*"
      current_item.SubText = Right(iLine, - InStr(iLine, "="))
      
    Case Like "Image_file=*"
      current_item.Image_file = Right(iLine, - InStr(iLine, "="))
      
    Case Like "Clipboard_data=*"
      current_item.Clipboard_data = Right(iLine, - InStr(iLine, "="))
      
    Case Like "Action=*"
      current_item.Action = Right(iLine, - InStr(iLine, "="))
      
    Case Like "Action_p=*"
      current_item.Action_p = Right(iLine, - InStr(iLine, "="))
      
    Case "END"
      items.Add(current_item)
      
  End Select

End





Public Sub configure()
 
  'this starts the configuration window.
  
End



