' Gambas class file

Public Struct rItemT
  Priority As Integer           '0-100, unused by now.
  plugin As String              'the plugin name
  Text As String                'text displayed in the clipboard
  SubText As String             'text displayed under the main text
  hApp As DesktopApps           '.desktop files
  action_desktopopen As String  'the data passed to action desktop.open()
  action_openfolder As String   'the data passed to the action openfolder
  action_activate As String     'the data passed to the action activate
  action_clipboard As String    'the text copied to the clipboard
  image_file As String          'optional image displayed (fullpath or "DefferredMimeIcon")
End Struct


Private plugin As String
Private priority As Integer
Private iconsize As Integer
Private minchar As Integer      'exit if the search term is lower than that

Private index_db As New String[]
Private index_file As String = "/tmp/indexfile.txt" 'fixme non costante


Public Sub _new(p_plugin As String, p_priority As Integer, p_iconsize As Integer, Optional p_minchar As Integer = 0)

  plugin = p_plugin
  priority = p_priority
  iconsize = p_iconsize
  minchar = p_minchar
  
  Try index_db = Split(File.Load(index_file))
  
End

Private Sub trigged(query As String) As Boolean
  If Len(query) < minchar Then Return False
  'some more controls here (?)
  Return True
End

' Editable part of the template follows:

Public Sub find(textcontrol As Object) As RItemT[]
  'search for filedialogs bookmarks
  Dim aFile As String
  Dim rResults As New RItemT[]
  Dim rResult As RItemT
  Dim current_search As String = textcontrol.text
  Dim i As Integer

  If Not trigged(textcontrol.text) Then Return

  For i = 0 To index_db.max
    If index_db[i] Like "*" & current_search & "*" Then 
      rResult = create_item(index_db[i])
      If rResult <> Null Then 
        rResults.Add(rResult)
        Wait 0.0005
        If rResults.count >= 100 Then 
          Raise new_results(rResults)
          rResults.clear
        Endif
      Endif
      textcontrol.refresh()
      Wait
      If current_search <> textcontrol.text Then
        Debug "Cancelling previous search " & current_search
        Return
      Endif 
    Endif
  Next

  Return rResults

End


Private Function create_item(path As String) As RItemT
  Dim return_item As RItemT
  Dim hApp As DesktopApps
  
  If Not (Exist(path, True)) Then Return Null
  return_item = New RItemT  

  If path Ends ".desktop" Then 
    MyDesktop.init()
    MyDesktop.parse(path)
    If MyDesktop.dExec <> "" Then 'is_desktop_exec = True
      return_item.image_file = "resize://" & MyDesktop.Get_file_Icon(MyDesktop.dIconName, iconsize)
    Endif
      Else
    If Stat(path).type = gb.Directory Then
      return_item.image_file = "icon:/" & iconsize & "/directory"
        Else
      return_item.image_file = "mimetype://" & path
    Endif
  Endif
  
  return_item.action_activate = path
  return_item.action_clipboard = path
  return_item.action_desktopopen = path
  return_item.action_openfolder = File.Dir(path)
  return_item.plugin = plugin
  return_item.Priority = priority
  return_item.Text = File.Name(path)
  return_item.SubText = "In: " & File.Dir(path)
  hApp = Null
  return_item.hApp = hApp
  Return return_item
End

Public Sub configure()
  
  'this starts the configuration window.
  
End

Event new_results(rResults As RItemT[])
